<?xml version="1.0" encoding="UTF-8"?>
 <!-- Bean头部 -->
 <beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
     
     <!-- 激活@Controller模式 -->
     <!--   <mvc:annotation-driven />  -->
     <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">           
	    <property name="interceptors">  
	        <list>     
	            <bean class="org.csdc.interceptor.TestInterceptor"></bean>    
	        </list>           
	    </property>           
	</bean>      
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
	    <property name="messageConverters">     
	        <list>     
	            <ref bean="byteArray_hmc" />     
	            <ref bean="string_hmc" />     
	            <ref bean="resource_hmc" />     
	            <ref bean="source_hmc" />     
	            <ref bean="xmlAwareForm_hmc" />     
	            <ref bean="jaxb2RootElement_hmc" />     
	            <ref bean="jackson_hmc" />
	        </list>     
	    </property>     
	</bean>     
	<bean id="byteArray_hmc" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" /><!-- 处理.. -->  
	<bean id="string_hmc" class="org.springframework.http.converter.StringHttpMessageConverter" /><!-- 处理.. -->  
	<bean id="resource_hmc" class="org.springframework.http.converter.ResourceHttpMessageConverter" /><!-- 处理.. -->  
	<bean id="source_hmc" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" /><!-- 处理.. -->  
	<bean id="xmlAwareForm_hmc" class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" /><!-- 处理.. -->  
	<bean id="jaxb2RootElement_hmc" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" /><!-- 处理.. -->  
	<bean id="jackson_hmc"
	    class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	    <property name="supportedMediaTypes">
	        <list>
	            <value>application/json;charset=UTF-8</value>
	            <value>text/json;charset=UTF-8</value>
	            <value>text/plain;charset=UTF-8</value>
	            <value>text/html;charset=UTF-8</value>
	        </list>
	    </property>
	    <property name="objectMapper" ref="customObjectMapper"></property> 
	</bean>	
	 <bean id="customObjectMapper" class="org.csdc.support.CustomObjectMapper"></bean>  

     <!-- 对静态资源文件的访问 -->  
 	 <mvc:resources mapping="/*.js" location="/" />   
     <mvc:resources mapping="/*.html" location="/" />   
     <mvc:resources mapping="/demo/**" location="/demo/" /> 
	 <mvc:resources mapping="/js/**" location="/js/" />  
	 <mvc:resources mapping="/resources/**" location="/resources/" />  
	 <mvc:resources mapping="/app/**" location="/app/" />  
	 <mvc:resources mapping="/extjs/**" location="/extjs/" />  
	 <mvc:resources mapping="/css/**" location="/css/" />  
	 <mvc:resources mapping="/images/**" location="/images/" />  
	 <mvc:resources mapping="/plugins/**" location="/plugins/" />
	 <mvc:resources mapping="/*.swf" location="/" /> 
	 <mvc:resources mapping="/preview/**" location="/preview/" /> 

     <!-- Controller方法拦截的Security框架的配置 -->
      <security:global-method-security 
      		 secured-annotations="enabled"
      		 jsr250-annotations="enabled"
		     pre-post-annotations="enabled"/> 

    
	 <!-- 配置拦截器 -->
	 <!-- <mvc:interceptors>   
     	<bean class="org.csdc.interceptor.TestInterceptor" />   
     </mvc:interceptors>   -->
     
     <!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->

 	<!-- 注解模式 -->  
	<context:component-scan base-package="org.csdc" use-default-filters="false">   
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
	</context:component-scan>    
	
     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
 
     <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
         <property name="prefix">
             <value>/WEB-INF/jsp/</value>
         </property>
         <property name="suffix">
             <value>.jsp</value>
         </property>
     </bean> 
                 
     	<!-- 总错误处理-->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">  
		 	<value>error</value>
		</property>
		<property name="defaultStatusCode">  
		 	<value>500</value>
		</property>		 	
		<property name="warnLogCategory">  
		 	<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>
		</property>		
		
		<property name="exceptionMappings">  
		    <props>  
		        <!-- 这里你可以根据需要定义N多个错误异常转发 -->  
		        <prop key="org.artofsolving.jodconverter.office.OfficeException">error/preview</prop> 	        
		        <prop key="java.lang.Exception">error/unknown</prop>    
		    </props>  
		</property> 	
		
	</bean> 
	
	<!-- 新增 -->
    <!-- 上传拦截，如最大上传值及最小上传值 -->  
     <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
        <property name="maxUploadSize" value="10000000000" />  
    </bean>  
	
 </beans>